#batch correction
library(sva)
a=read.table(file.choose(),sep="\t",header=TRUE,row.names=1)
b=read.table(file.choose(),sep="\t",header=TRUE)
batch = b$batch
modcombat = model.matrix(~1, data=b)
combat_edata = ComBat(dat=as.matrix(a), batch=batch, mod=modcombat, par.prior=TRUE, prior.plots=FALSE)
write.table(combat_edata,file="**/batch_corrected_hypoxic_data.txt",sep="\t",quote=F)

#lasso feature selection
rm(list=ls())
gc()
library("glmnet")
library("survival")
library("survminer")#froest plot
a<-read.table(file.choose(),header=T,sep='\t')
x<-a[,4:ncol(a)]
x1<-as.matrix(x)
cvfit = cv.glmnet(x1, Surv(a$days,a$status),family = "cox")
plot(cvfit) 
cvfit$lambda.min
cvfit$lambda.1se 
coef.min = coef(cvfit, s = "lambda.min") 
active.min = which(coef.min != 0)  The left vertical line in our plot shows us where the CV-error curve hits its minimum.
#The right vertical line shows us the most regularized model with CV-error within 1 standard deviation of the minimum
index.min = coef.min[active.min]
active.min #return the variable left in model 
index.min  #return corresponding coefficient of variable
geneids <- colnames(x1)[active.min]
combine<-cbind(geneids, index.min)
combine
#rs=risk score
rs <- as.matrix(a[, geneids]) %*% as.matrix(index.min)
good.prog <- (rs < median(rs))
crc_surv<-Surv(a$days,a$status)
fit <- survfit(crc_surv ~ good.prog)
plot(fit, lwd = 2, lty = c(1,1), col = c("red","blue"), xlab = 'Time (months)', ylab = 'Survival Probability',mark.time=TRUE)
legend("topright", legend=c('PI > median', 'PI < median'), lty = c(1,1), col = c("red", "blue"), lwd = 2)
title("TCGA")
x.test <- as.data.frame(a[-1, ])
logrank <- survdiff(crc_surv ~ good.prog, data = a, rho = 0)
logrank
legend("bottom", legend='P = 0.0065', lwd = 2)
p.median <- 1-pchisq(logrank$chisq, 1)
pi <- coxph(crc_surv ~ rs)
pi1 <- summary(coxph(crc_surv ~ rs))
pi1
summary(fit, time = 60) 
summary(fit, times=seq(0, 100, 20))

#forest plot
library("survival")
library("survminer")
a=read.table(file.choose(),sep="\t",header=TRUE)
res.cox<-coxph(Surv(time,status)~sex+age+subtype, data=a)
ggforest(res.cox,main="Hazard ratio",cpositions=c(0.02,0.22,0.4),fontsize=0.8,refLabel="reference",noDigits=2)
